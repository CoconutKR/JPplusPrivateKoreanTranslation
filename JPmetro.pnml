#include "src/other/params.pnml"
template tmpl_std(x,y) {
    // parameters x, y: coordinates of top-left corner of front sprite
[x, 	 y,	8, 	24,		-3, 	-16] //short
[x +9, 	 y,	22,	20,		-13,	-13] //dia1
[x +32,  y,	32,	17,		-14,	-13] //long
[x +65,  y,	22,	20,		-5, 	-12] //dia2
[x +88,  y,	8, 	24,		-3, 	-16] //short
[x +97,  y,	22,	20,		-13,	-13] //dia1
[x +120, y,	32,	17,		-14,	-13] //long
[x+153,  y,	22,	20,		-5, 	-12] //dia2
}

template tmpl_std_rev(x,y){
[x +88,  y,	8, 	24,		-3, 	-16] //short
[x +97,  y,	22,	20,		-13,	-13] //dia1
[x +120, y,	32,	17,		-14,	-13] //long
[x+153,  y,	22,	20,		-5, 	-12] //dia2
[x, 	 y,	8, 	24,		-3, 	-16] //short
[x +9, 	 y,	22,	20,		-13,	-13] //dia1
[x +32,  y,	32,	17,		-14,	-13] //long
[x +65,  y,	22,	20,		-5, 	-12] //dia2
}
template tmpl_purchase (x, y) {
		 [x, y, 76, 15, -28, -10]
}

spriteset (dummy_sprites, "gfx/empty.png")
{
  [0, 0, 2, 2, 0, 0, CROP]
}
spriteset (set_mu_car_purchase,   "gfx/mucarbuy.png") { tmpl_purchase(0, 0) }
spriteset (set_mu_car_base,   "gfx/mucar.png") { tmpl_std(0, 0) }
item(FEAT_TRAINS, mu_car_metro, 100) {
	property {
        name:  string(MUCAR_1435_M);
        introduction_date: date(1800,1,1);
        climates_available: ALL_CLIMATES;
                model_life: VEHICLE_NEVER_EXPIRES;
                vehicle_life: 60;
                loading_speed: param_loading_3D;
                cost_factor: 64;
                running_cost_factor: 6;
                speed: 0 km/h;
                power: 0 hp;
                cargo_capacity: 1;
                weight: 0 ton;
                tractive_effort_coefficient: 0.3;
                air_drag_coefficient: 0;
                reliability_decay: 20;
                refittable_cargo_classes: bitmask(CC_PASSENGERS);
                cargo_age_period: 185;
                refit_cost: 0;
				track_type:TR_1435_M;
                ai_special_flag: AI_FLAG_PASSENGER;
                running_cost_base: RUNNING_COST_DIESEL;
                engine_class: ENGINE_CLASS_STEAM;
                visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
                sprite_id: SPRITE_ID_NEW_TRAIN;
                dual_headed: 0;
                extra_power_per_wagon: 0;
                bitmask_vehicle_info: 0;
}
 graphics {
		purchase:                     set_mu_car_purchase;
    	additional_text:			        return string(MUCAR_DESC);
    	default: set_mu_car_base;
		length: 8;
    }

}
item(FEAT_TRAINS, mu_car, 101) {
	property {
        name:  string(MUCAR_1435);
        introduction_date: date(1800,1,1);
        climates_available: ALL_CLIMATES;
                model_life: VEHICLE_NEVER_EXPIRES;
                vehicle_life: 60;
                loading_speed: param_loading_3D;
                cost_factor: 64;
                running_cost_factor: 6;
                speed: 0 km/h;
                power: 0 hp;
                cargo_capacity: 1;
                weight: 0 ton;
                tractive_effort_coefficient: 0.3;
                air_drag_coefficient: 0;
                reliability_decay: 20;
                refittable_cargo_classes: bitmask(CC_PASSENGERS);
                cargo_age_period: 185;
                refit_cost: 0;
				track_type:TR_1435;
                ai_special_flag: AI_FLAG_PASSENGER;
                running_cost_base: RUNNING_COST_DIESEL;
                engine_class: ENGINE_CLASS_STEAM;
                visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
                sprite_id: SPRITE_ID_NEW_TRAIN;
                dual_headed: 0;
                extra_power_per_wagon: 0;
                bitmask_vehicle_info: 0;
}
 graphics {
		purchase:                     set_mu_car_purchase;
    	additional_text:			        return string(MUCAR_DESC);
    	default: set_mu_car_base;
		length: 8;
    }

}
item(FEAT_TRAINS, mu_car_narrow, 102) {
	property {
        name:  string(MUCAR_1067);
        introduction_date: date(1800,1,1);
        climates_available: ALL_CLIMATES;
                model_life: VEHICLE_NEVER_EXPIRES;
                vehicle_life: 60;
                loading_speed: param_loading_3D;
                cost_factor: 64;
                running_cost_factor: 6;
                speed: 0 km/h;
                power: 0 hp;
                cargo_capacity: 1;
                weight: 0 ton;
                tractive_effort_coefficient: 0.3;
                air_drag_coefficient: 0;
                reliability_decay: 20;
                refittable_cargo_classes: bitmask(CC_PASSENGERS);
                cargo_age_period: 185;
                refit_cost: 0;
				track_type:TR_1067;
                ai_special_flag: AI_FLAG_PASSENGER;
                running_cost_base: RUNNING_COST_DIESEL;
                engine_class: ENGINE_CLASS_STEAM;
                visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
                sprite_id: SPRITE_ID_NEW_TRAIN;
                dual_headed: 0;
                extra_power_per_wagon: 0;
                bitmask_vehicle_info: 0;
}
 graphics {
		purchase:                     set_mu_car_purchase;
    	additional_text:			        return string(MUCAR_DESC);
    	default: set_mu_car_base;
		length: 8;
    }

}

switch (FEAT_TRAINS, SELF, sw_stop_start_2, num_vehs_in_consist < 2) {				
		1:  return string(STR_FEW_CARS_2_ERROR); 				
		return CB_RESULT_NO_TEXT; 
	}
switch (FEAT_TRAINS, SELF, sw_stop_start_3, num_vehs_in_consist < 3) {				
		1:  return string(STR_FEW_CARS_3_ERROR); 				
		return CB_RESULT_NO_TEXT; 
	}
switch (FEAT_TRAINS, SELF, sw_stop_start_4, num_vehs_in_consist < 4) {				
		1:  return string(STR_FEW_CARS_4_ERROR); 				
		return CB_RESULT_NO_TEXT; 
	}



//10 id's default, 20 for big lines for future reserve
// ginza 1000-1049, marunouchi 1050-1100 etc.

//Tokyo
//ginza 1000-1019
#include "src/Tokyo/ginza/tk_gz_type1000.pnml"
#include "src/Tokyo/ginza/tk_gz_type1100.pnml"
#include "src/Tokyo/ginza/tk_gz_type100.pnml"
#include "src/Tokyo/ginza/tk_gz_type1300.pnml"
#include "src/Tokyo/ginza/tk_gz_type1900.pnml"
#include "src/Tokyo/ginza/tk_gz_01series.pnml"
#include "src/Tokyo/ginza/tk_gz_1000series.pnml"

//marunouchi 1020-1029
#include "src/Tokyo/marunouchi/type1900.pnml"
#include "src/Tokyo/marunouchi/eidan500.pnml"
#include "src/Tokyo/marunouchi/eidan02.pnml"
#include "src/Tokyo/marunouchi/2000series.pnml"

//hibiya 1030-1039
#include "src/Tokyo/hibiya/eidan3000.pnml"
#include "src/Tokyo/hibiya/eidan03.pnml"
#include "src/Tokyo/hibiya/13000series.pnml"

//tozai 1040-1059
#include "src/Tokyo/tozai/5000series.pnml"
#include "src/Tokyo/tozai/05series.pnml"
#include "src/Tokyo/tozai/07series.pnml"
#include "src/Tokyo/tozai/15000series.pnml"
#include "src/Tokyo/tozai/toyo1000.pnml"
#include "src/Tokyo/tozai/toyo2000.pnml"

//chiyoda 1060-1079
#include "src/Tokyo/chiyoda/5000series.pnml"
#include "src/Tokyo/chiyoda/6000series.pnml"
#include "src/Tokyo/chiyoda/06series.pnml"
#include "src/Tokyo/chiyoda/16000series.pnml"
#include "src/Tokyo/chiyoda/05series.pnml"

// futokushin-yurakucho 1080-1099;
#include "src/Tokyo/yurakucho_fukutoshin/07series.pnml"
#include "src/Tokyo/yurakucho_fukutoshin/7000series.pnml"
#include "src/Tokyo/yurakucho_fukutoshin/10000series.pnml"
#include "src/Tokyo/yurakucho_fukutoshin/17000series.pnml"

//hanzomon 1100-1109
#include "src/Tokyo/hanzomon/8000series.pnml"
#include "src/Tokyo/hanzomon/08series.pnml"
#include "src/Tokyo/hanzomon/18000series.pnml"

//namboku 1110-1119
#include "src/Tokyo/namboku/9000series.pnml"
#include "src/Tokyo/namboku/saitama2000.pnml"

//asakusa 1120-1129
#include "src/Tokyo/asakusa/toei5000.pnml"
#include "src/Tokyo/asakusa/toei5200.pnml"
#include "src/Tokyo/asakusa/toei5300.pnml"
#include "src/Tokyo/asakusa/toei5500.pnml"

//mita 1130-1139
#include "src/Tokyo/mita/toei6000.pnml"
#include "src/Tokyo/mita/toei6300.pnml"
#include "src/Tokyo/mita/toei6500.pnml"

//shinjuku 1140-1149
#include "src/Tokyo/shinjuku/toei10_000.pnml"
#include "src/Tokyo/shinjuku/toei10_300.pnml"

//oedo 1150-1159
#include "src/Tokyo/oedo/toei12_000.pnml"

//reserved for future lines 1160-1199

//Yokohama
//Blue Line 1200-1209
#include "src/Yokohama/1000series.pnml"
#include "src/Yokohama/3000series.pnml"
#include "src/Yokohama/4000series.pnml"

//Green Line + reserved 1210-1219;
#include "src/Yokohama/10000series.pnml"

//Osaka
//namboku kita osaka 1220-1229
#include "src/Osaka/namboku_mido/8000series.pnml"
#include "src/Osaka/namboku_mido/9000series.pnml"

//namboku 1230-1249
#include "src/Osaka/namboku_mido/type100.pnml"
#include "src/Osaka/namboku_mido/type500.pnml"
#include "src/Osaka/namboku_mido/type1000.pnml"
#include "src/Osaka/namboku_mido/50series.pnml"
#include "src/Osaka/namboku_mido/30series.pnml" 
#include "src/Osaka/namboku_mido/10series.pnml" 
#include "src/Osaka/namboku_mido/21series.pnml" 
#include "src/Osaka/namboku_mido/30000series.pnml" 

//tanimachi 1250-1259
#include "src/Osaka/tanimachi/50series.pnml"
#include "src/Osaka/tanimachi/30series.pnml"
#include "src/Osaka/tanimachi/20series.pnml"
#include "src/Osaka/tanimachi/22series.pnml"
#include "src/Osaka/tanimachi/30000series.pnml"

//yotsubashi 1260-1269
#include "src/Osaka/yotsubashi/1100type.pnml"
#include "src/Osaka/yotsubashi/50series.pnml"
#include "src/Osaka/yotsubashi/30series.pnml"
#include "src/Osaka/yotsubashi/23series.pnml"

//chuo 1270-1279
#include "src/Osaka/chuo/6000type.pnml"
#include "src/Osaka/chuo/50series.pnml"
#include "src/Osaka/chuo/30series.pnml"
#include "src/Osaka/chuo/20series.pnml"
#include "src/Osaka/chuo/24series.pnml"
#include "src/Osaka/chuo/30000series_a.pnml"
#include "src/Osaka/chuo/400series.pnml"

//sennichimae 1280-1289
#include "src/Osaka/sennichimae/1100type.pnml"
#include "src/Osaka/sennichimae/50series.pnml"
#include "src/Osaka/sennichimae/30series.pnml"
#include "src/Osaka/sennichimae/25series.pnml"
