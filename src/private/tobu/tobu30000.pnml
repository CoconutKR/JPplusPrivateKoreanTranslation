spriteset (tobu30000_purchase,   "gfx/purchase.png") { tmpl_purchase(0, 0) }
alternative_sprites(tobu30000_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu30000/tobu30000_purchase.png"){ tmpl_purchase(0, 0) }

//livery 1
spriteset (tobu30000_front,       "gfx/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu30000_end,       "gfx/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu30000_mot,       "gfx/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu30000_mot_rev,       "gfx/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu30000_mot_2,       "gfx/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu30000_wag,       "gfx/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu30000_front_f,       "gfx/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu30000_end_f,       "gfx/gfx_placeholder.png") { tmpl_std(0, 0) }

alternative_sprites(tobu30000_front, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu30000/tobu30000.png"){ tmpl_std(0, 0) }
alternative_sprites(tobu30000_end, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu30000/tobu30000.png"){ tmpl_std_rev(0, 25) }
alternative_sprites(tobu30000_mot, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu30000/tobu30000.png"){ tmpl_std(0, 50) }
alternative_sprites(tobu30000_mot_rev, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu30000/tobu30000.png"){ tmpl_std_rev(0, 50) }
alternative_sprites(tobu30000_mot_2, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu30000/tobu30000.png"){ tmpl_symm_std(0, 75) }
alternative_sprites(tobu30000_wag, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu30000/tobu30000.png"){ tmpl_symm_std(0, 100) }
alternative_sprites(tobu30000_front_f, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu30000/tobu30000.png"){ tmpl_std_rev(0, 125) }
alternative_sprites(tobu30000_end_f, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu30000/tobu30000.png"){ tmpl_std(0, 125) }

//*livery 1
//panto placer
//1
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_1,position_in_vehid_chain %6){
    0: tobu30000_mot_2;
    3: tobu30000_mot;
    tobu30000_wag;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_1_rev,1-position_in_vehid_chain_from_end %6){
    0: tobu30000_mot;
    3: tobu30000_mot_rev;
    tobu30000_wag;
}
switch(FEAT_TRAINS, PARENT, sw_tobu30000_panto_placer_main_1,vehicle_is_reversed){
    1: sw_tobu30000_panto_placer_1_rev;
    sw_tobu30000_panto_placer_1;
}
//2
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_2,position_in_vehid_chain %3){
    0: tobu30000_mot_2;
    tobu30000_wag;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_2_rev,1-position_in_vehid_chain_from_end %3){
    0: tobu30000_mot_2;
    tobu30000_wag;
}
switch(FEAT_TRAINS, PARENT, sw_tobu30000_panto_placer_main_2,vehicle_is_reversed){
    1: sw_tobu30000_panto_placer_2_rev;
    sw_tobu30000_panto_placer_2;
}
//2
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_3,position_in_vehid_chain %3){
    1: tobu30000_mot_2;
    tobu30000_wag;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_3_rev,1-position_in_vehid_chain_from_end %3){
    1: tobu30000_mot_2;
    tobu30000_wag;
}
switch(FEAT_TRAINS, PARENT, sw_tobu30000_panto_placer_main_3,vehicle_is_reversed){
    1: sw_tobu30000_panto_placer_3_rev;
    sw_tobu30000_panto_placer_3;
}
//panto controller
switch(FEAT_TRAINS, SELF, sw_tobu30000_panto_placer_main,num_vehs_in_vehid_chain+1){
    5:sw_tobu30000_panto_placer_main_3;
    6..7:sw_tobu30000_panto_placer_main_2;
    8:sw_tobu30000_panto_placer_main_3;
    sw_tobu30000_panto_placer_main_1;
}

//fake head-end placer
switch(FEAT_TRAINS, SELF, sw_tobu30000_fake_placer,position_in_vehid_chain +1){
    5: tobu30000_front_f;
    6: tobu30000_end_f;
sw_tobu30000_panto_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_fake_placer_rev,position_in_vehid_chain_from_end ){
    5: tobu30000_end_f;
    6: tobu30000_front_f;
sw_tobu30000_panto_placer_main;
}
switch(FEAT_TRAINS, PARENT, sw_tobu30000_fake_placer_gfx,vehicle_is_reversed){
    1: sw_tobu30000_fake_placer_rev;
    sw_tobu30000_fake_placer;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_fake_placer_main,num_vehs_in_vehid_chain>8 - 1){
    1: sw_tobu30000_fake_placer_gfx;
sw_tobu30000_panto_placer_main;
}

//front-end-fixer
switch(FEAT_TRAINS, SELF, sw_tobu30000_end_gfx_main,position_in_vehid_chain_from_end){
    0: tobu30000_end;
    default: sw_tobu30000_fake_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_front_gfx_main,position_in_vehid_chain_from_end){
    0: tobu30000_front;
    default: sw_tobu30000_fake_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_lv,vehicle_type_id){
    mu_car_narrow:sw_tobu30000_end_gfx_main;
    sw_tobu30000_front_gfx_main;
}

//post fixers
//capacity-changer
switch(FEAT_TRAINS, SELF, sw_tobu30000_capacity,position_in_vehid_chain_from_end){
    0: 139*param_capacity_mod/3;
    default: 153*param_capacity_mod/3;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_capacity_1,position_in_vehid_chain){
    0: 139*param_capacity_mod/3;
    default: sw_tobu30000_capacity;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_capacity_main,vehicle_type_id){
    mu_car_narrow:sw_tobu30000_capacity;
    sw_tobu30000_capacity_1;
}
//power fix
switch(FEAT_TRAINS, SELF, sw_tobu30000_power,position_in_vehid_chain_from_end%5){
    1..2:return 190;
    4:return 190;
    return 0;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_head_power,num_vehs_in_consist){
    39: return 190;
    return 0;
}
switch(FEAT_TRAINS, SELF, sw_tobu30000_power_main,vehicle_type_id){
    mu_car_narrow:sw_tobu30000_power;
    sw_tobu30000_head_power;
}

//attachable vehicles
switch(FEAT_TRAINS, SELF, tobu30000_attach_vehid, vehicle_type_id) {
  mu_car: return string(STR_ATTACH_1067_ERROR);
  mu_car_metro: return string(STR_ATTACH_1067_ERROR);
  return CB_RESULT_ATTACH_ALLOW;
}

item(FEAT_TRAINS, tobu30000,2077) {
    property {
        cargo_capacity: 130;
        ai_special_flag: AI_FLAG_PASSENGER;
        sprite_id: SPRITE_ID_NEW_TRAIN;
        misc_flags: bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes: bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost: 0;
        dual_headed: 0;
        ai_engine_rank: 0;
        running_cost_base: RUNNING_COST_ELECTRIC;
        engine_class: ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 2, DISABLE_WAGON_POWER);
        tractive_effort_coefficient: 0.3;
        air_drag_coefficient: 0.07;
        bitmask_vehicle_info: 0;
        
        climates_available: param_disable_tobu == 0 ? ALL_CLIMATES : NO_CLIMATE;
        name: string(STR_tobu30000_NAME);
        introduction_date: date(1996, 1, 1);
        model_life: VEHICLE_NEVER_EXPIRES;
        vehicle_life: 32;
        reliability_decay: 20;

        cost_factor: 12;
        running_cost_factor: 42;
        speed: 120 km/h;
        track_type: TR_1067_DC;
        power: 1 kW;
        weight: 34 ton;
        loading_speed: param_loading_4D;
    }
	graphics {
        power:sw_tobu30000_power_main()*4*1342/1000;
        start_stop: sw_stop_start_3;
        default: sw_tobu30000_lv;
        purchase: tobu30000_purchase;
        can_attach_wagon: tobu30000_attach_vehid;
        //cargo_subtype_text:sw_tobu30000_lv_desc;
        additional_text:    string(STR_CONCAT_8,
                            string(STR_NARROWGAUGE),
                            string(STR_LOAD_SPEED,
                            string(STR_4_DOOR),),
                            string(STR_FORMATION),
                            string(STR_10_CARS),
                            string(STR_CARS),
                            string(STR_COUPLER,
                            string(STR_KNUCKLE)),
                            string(STR_USAGE,
                            string(STR_COMMUTER),
                            string(STR_DC),
                            ),
                            string(STR_OPERATOR_PRIVATE,
                            string(STR_TOBU),
                            ),
                            
                        );
                         
        cargo_capacity: sw_tobu30000_capacity_main()*param_capacity_mod/3;  
    }
    livery_override(mu_car_narrow){
        loading_speed: param_loading_4D;
        cargo_capacity: sw_tobu30000_capacity_main()*param_capacity_mod/3;
        default:                      sw_tobu30000_lv;
        power:  sw_tobu30000_power_main()*4*1342/1000;
        weight: 33;
      }
}