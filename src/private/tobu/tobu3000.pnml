spriteset (tobu3000_purchase,   "gfx/misc/purchase.png") { tmpl_purchase(0, 0) }
alternative_sprites(tobu3000_purchase, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_purchase.png"){ tmpl_purchase(0, 0) }

//livery 1
spriteset (tobu3000_1_front,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_1_end,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_1_end_rev,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_1_front_mot,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_1_end_mot,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_1_end_mot_rev,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_1_mot,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_1_mot_rev,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_1_wag,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }

alternative_sprites(tobu3000_1_front, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_1.png"){ tmpl_std(0, 0) }
alternative_sprites(tobu3000_1_end, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_1.png"){ tmpl_std_rev(0, 25) }
alternative_sprites(tobu3000_1_end_rev, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_1.png"){ tmpl_std(0, 25) }
alternative_sprites(tobu3000_1_front_mot, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_1.png"){ tmpl_std(0, 50) }
alternative_sprites(tobu3000_1_end_mot, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_1.png"){ tmpl_std_rev(0, 75) }
alternative_sprites(tobu3000_1_end_mot_rev, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_1.png"){ tmpl_std(0, 75) }
alternative_sprites(tobu3000_1_mot, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_1.png"){ tmpl_std(0, 100) }
alternative_sprites(tobu3000_1_mot_rev, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_1.png"){ tmpl_std_rev(0, 100) }
alternative_sprites(tobu3000_1_wag, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_1.png"){ tmpl_symm(0, 125) }

//livery 2
spriteset (tobu3000_2_front,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_2_end,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_2_end_rev,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_2_front_mot,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_2_end_mot,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_2_end_mot_rev,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_2_mot,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_2_mot_rev,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }
spriteset (tobu3000_2_wag,       "gfx/misc/gfx_placeholder.png") { tmpl_std(0, 0) }

alternative_sprites(tobu3000_2_front, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_2.png"){ tmpl_std(0, 0) }
alternative_sprites(tobu3000_2_end, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_2.png"){ tmpl_std_rev(0, 25) }
alternative_sprites(tobu3000_2_end_rev, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_2.png"){ tmpl_std(0, 25) }
alternative_sprites(tobu3000_2_front_mot, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_2.png"){ tmpl_std(0, 50) }
alternative_sprites(tobu3000_2_end_mot, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_2.png"){ tmpl_std_rev(0, 75) }
alternative_sprites(tobu3000_2_end_mot_rev, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_2.png"){ tmpl_std(0, 75) }
alternative_sprites(tobu3000_2_mot, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_2.png"){ tmpl_std(0, 100) }
alternative_sprites(tobu3000_2_mot_rev, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_2.png"){ tmpl_std_rev(0, 100) }
alternative_sprites(tobu3000_2_wag, ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP,      "gfx/private/tobu/tobu3000/tobu3000_2.png"){ tmpl_symm(0, 125) }

//*livery 1
//special gfx
//head gfx
switch(FEAT_TRAINS, PARENT, sw_tobu3000_1_front_gfx, vehicle_is_reversed){
    1:tobu3000_1_front;
    tobu3000_1_front_mot;
}

//end gfx
switch(FEAT_TRAINS, PARENT, sw_tobu3000_1_end_gfx, vehicle_is_reversed){
    1:tobu3000_1_end_mot;
    tobu3000_1_end;
}
//fake gfx
//fake front
switch(FEAT_TRAINS, PARENT, sw_tobu3000_1_front_f_gfx, vehicle_is_reversed){
    1:tobu3000_1_end_mot;
    tobu3000_1_end_mot_rev;
}
//fake end
switch(FEAT_TRAINS, PARENT, sw_tobu3000_1_end_f_gfx, vehicle_is_reversed){
    1:tobu3000_1_end_rev;
    tobu3000_1_end;
}

//panto placer
//1
switch(FEAT_TRAINS, SELF, sw_tobu3000_1_panto_placer_1,position_in_vehid_chain %2){
    1: tobu3000_1_mot;
    tobu3000_1_wag;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_1_panto_placer_1_rev,1-position_in_vehid_chain_from_end %2){
    1: tobu3000_1_mot_rev;
    tobu3000_1_wag;
}
switch(FEAT_TRAINS, PARENT, sw_tobu3000_1_panto_placer_main,vehicle_is_reversed){
    1: sw_tobu3000_1_panto_placer_1_rev;
    sw_tobu3000_1_panto_placer_1;
}

//fake head-end placer
switch(FEAT_TRAINS, SELF, sw_tobu3000_1_fake_placer,position_in_vehid_chain +1){
    3: sw_tobu3000_1_end_f_gfx;
    4: sw_tobu3000_1_front_f_gfx;
sw_tobu3000_1_panto_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_1_fake_placer_rev,position_in_vehid_chain_from_end ){
    3: sw_tobu3000_1_end_f_gfx;
    4: sw_tobu3000_1_front_f_gfx;
sw_tobu3000_1_panto_placer_main;
}
switch(FEAT_TRAINS, PARENT, sw_tobu3000_1_fake_placer_gfx,vehicle_is_reversed){
    1: sw_tobu3000_1_fake_placer_rev;
    sw_tobu3000_1_fake_placer;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_1_fake_placer_main,num_vehs_in_vehid_chain>7 - 1){
    1: sw_tobu3000_1_fake_placer_gfx;
sw_tobu3000_1_panto_placer_main;
}

//front-end-fixer
switch(FEAT_TRAINS, SELF, sw_tobu3000_1_end_gfx_main,position_in_vehid_chain_from_end){
    0: sw_tobu3000_1_end_gfx;
    default: sw_tobu3000_1_fake_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_1_front_gfx_main,position_in_vehid_chain_from_end){
    0: sw_tobu3000_1_front_gfx;
    default: sw_tobu3000_1_fake_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_livery_1,vehicle_type_id){
    mu_car_narrow:sw_tobu3000_1_end_gfx_main;
    sw_tobu3000_1_front_gfx_main;
}

//*livery 2
//special gfx
//head gfx
switch(FEAT_TRAINS, PARENT, sw_tobu3000_2_front_gfx, vehicle_is_reversed){
    1:tobu3000_2_front;
    tobu3000_2_front_mot;
}

//end gfx
switch(FEAT_TRAINS, PARENT, sw_tobu3000_2_end_gfx, vehicle_is_reversed){
    1:tobu3000_2_end_mot;
    tobu3000_2_end;
}
//fake gfx
//fake front
switch(FEAT_TRAINS, PARENT, sw_tobu3000_2_front_f_gfx, vehicle_is_reversed){
    1:tobu3000_2_end_mot;
    tobu3000_2_end_mot_rev;
}
//fake end
switch(FEAT_TRAINS, PARENT, sw_tobu3000_2_end_f_gfx, vehicle_is_reversed){
    1:tobu3000_2_end_rev;
    tobu3000_2_end;
}

//panto placer
//1
switch(FEAT_TRAINS, SELF, sw_tobu3000_2_panto_placer_1,position_in_vehid_chain %2){
    1: tobu3000_2_mot;
    tobu3000_2_wag;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_2_panto_placer_1_rev,1-position_in_vehid_chain_from_end %2){
    1: tobu3000_2_mot_rev;
    tobu3000_2_wag;
}
switch(FEAT_TRAINS, PARENT, sw_tobu3000_2_panto_placer_main,vehicle_is_reversed){
    1: sw_tobu3000_2_panto_placer_1_rev;
    sw_tobu3000_2_panto_placer_1;
}

//fake head-end placer
switch(FEAT_TRAINS, SELF, sw_tobu3000_2_fake_placer,position_in_vehid_chain +1){
    3: sw_tobu3000_2_end_f_gfx;
    4: sw_tobu3000_2_front_f_gfx;
sw_tobu3000_2_panto_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_2_fake_placer_rev,position_in_vehid_chain_from_end ){
    3: sw_tobu3000_2_end_f_gfx;
    4: sw_tobu3000_2_front_f_gfx;
sw_tobu3000_2_panto_placer_main;
}
switch(FEAT_TRAINS, PARENT, sw_tobu3000_2_fake_placer_gfx,vehicle_is_reversed){
    1: sw_tobu3000_2_fake_placer_rev;
    sw_tobu3000_2_fake_placer;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_2_fake_placer_main,num_vehs_in_vehid_chain>7 - 1){
    1: sw_tobu3000_2_fake_placer_gfx;
sw_tobu3000_2_panto_placer_main;
}

//front-end-fixer
switch(FEAT_TRAINS, SELF, sw_tobu3000_2_end_gfx_main,position_in_vehid_chain_from_end){
    0: sw_tobu3000_2_end_gfx;
    default: sw_tobu3000_2_fake_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_2_front_gfx_main,position_in_vehid_chain_from_end){
    0: sw_tobu3000_2_front_gfx;
    default: sw_tobu3000_2_fake_placer_main;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_livery_2,vehicle_type_id){
    mu_car_narrow:sw_tobu3000_2_end_gfx_main;
    sw_tobu3000_2_front_gfx_main;
}

//livery controller
//livery 0
switch(FEAT_TRAINS, SELF, sw_tobu3000_livery_0, build_year){
    0..1970:sw_tobu3000_livery_1;
    sw_tobu3000_livery_2;
}
//lv selector
switch(FEAT_TRAINS, PARENT, sw_tobu3000_lv, cargo_subtype){
    0:sw_tobu3000_livery_0;
    1:sw_tobu3000_livery_1;
    2:sw_tobu3000_livery_2;
}
//0 ..1986
switch(FEAT_TRAINS, SELF, sw_tobu3000_lv_1_desc, cargo_subtype){
    0:string(LV_TIME_RANDOM);
    1:string(LV_tobu3000_1);
}
//1987-2004
switch(FEAT_TRAINS, SELF, sw_tobu3000_lv_2_desc, cargo_subtype){
    0:string(LV_TIME_RANDOM);
    1:string(LV_tobu3000_1);
    2:string(LV_tobu3000_2);
}

//timed lv selector
switch(FEAT_TRAINS, SELF, sw_tobu3000_lv_desc, current_year){
    0..1970:sw_tobu3000_lv_1_desc;
    sw_tobu3000_lv_2_desc;
}

//post fixers
//capacity-changer
switch(FEAT_TRAINS, SELF, sw_tobu3000_capacity,position_in_vehid_chain_from_end){
    0: 140;
    default: 150;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_capacity_1,position_in_vehid_chain_from_end){
    0: 140;
    default: sw_tobu3000_capacity;
}
switch(FEAT_TRAINS, SELF, sw_tobu3000_capacity_main,vehicle_type_id){
    mu_car_narrow:sw_tobu3000_capacity;
    sw_tobu3000_capacity_1;
}

//power fix
switch(FEAT_TRAINS, SELF, sw_tobu3000_power_0,build_year){
    0..1970: return 388*1342/1000;
    return 440*1342/1000;
}
    switch(FEAT_TRAINS, SELF, sw_tobu3000_head_power,num_vehs_in_consist){
        39: sw_tobu3000_power_0;
        return 0;
    }
switch(FEAT_TRAINS, SELF, sw_tobu3000_power, position_in_vehid_chain %2) {
  1: return 0;
  sw_tobu3000_power_0;
}


//attachable vehicles
switch(FEAT_TRAINS, SELF, tobu3000_attach_vehid, vehicle_type_id) {
  mu_car: return string(STR_ATTACH_1067_ERROR);
  mu_car_metro: return string(STR_ATTACH_1067_ERROR);
  return CB_RESULT_ATTACH_ALLOW;
}

item(FEAT_TRAINS, tobu3000,2070) {
    property {
        cargo_capacity: 130;
        ai_special_flag: AI_FLAG_PASSENGER;
        sprite_id: SPRITE_ID_NEW_TRAIN;
        misc_flags: bitmask(TRAIN_FLAG_MU);
        refittable_cargo_classes: bitmask(CC_PASSENGERS);
        non_refittable_cargo_classes: bitmask();
        refit_cost: 0;
        dual_headed: 0;
        ai_engine_rank: 0;
        running_cost_base: RUNNING_COST_ELECTRIC;
        engine_class: ENGINE_CLASS_ELECTRIC;
        visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 2, DISABLE_WAGON_POWER);
        tractive_effort_coefficient: 0.3;
        air_drag_coefficient: 0.07;
        bitmask_vehicle_info: 0;
        
        climates_available: param_disable_tobu == 0 ? ALL_CLIMATES : NO_CLIMATE;
        name: string(STR_tobu3000_NAME);
        introduction_date: date(1964, 1, 1);
        vehicle_life: 34;
        model_life: 31;
        reliability_decay: 20;

        cost_factor: 18;
        running_cost_factor: 48;
        speed: 110 km/h;
        track_type: TR_1067_DC;
        power: 388 kW;
        weight: 33 ton;
        loading_speed: param_loading_3D;
    }
	graphics {
        start_stop: sw_stop_start_2;
        default: sw_tobu3000_lv;
        purchase: tobu3000_purchase;
        can_attach_wagon: tobu3000_attach_vehid;
        cargo_subtype_text:sw_tobu3000_lv_desc;
        additional_text:    string(STR_CONCAT_8,
                            string(STR_NARROWGAUGE),
                            string(STR_LOAD_SPEED,
                            string(STR_3_DOOR),),
                            string(STR_FORMATION),
                            string(STR_tobu3000_DESC),
                            string(STR_CARS),
                            string(STR_COUPLER,
                            string(STR_KNUCKLE)),
                            string(STR_USAGE,
                            string(STR_COMMUTER),
                            string(STR_DC),
                            ),
                            string(STR_OPERATOR_PRIVATE,
                            string(STR_TOBU),
                            ),
                            
                        );
        power: sw_tobu3000_head_power;
        cargo_capacity: sw_tobu3000_capacity_main()*param_capacity_mod/3;  
    }
    livery_override(mu_car_narrow){
        loading_speed: param_loading_3D;
        cargo_capacity: sw_tobu3000_capacity_main()*param_capacity_mod/3;
        default:                      sw_tobu3000_lv;
        power: sw_tobu3000_power;
        weight: 33;
      }
}